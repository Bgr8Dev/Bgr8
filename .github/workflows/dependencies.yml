name: 📦 Dependency Management

on:
  schedule:
    # Check for updates every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:
    inputs:
      update_type:
        description: 'Type of update to perform'
        required: true
        default: 'check'
        type: choice
        options:
          - check
          - update-patch
          - update-minor
          - update-major
          - audit-fix

jobs:
  dependency-check:
    name: 📦 Dependency Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: 🔍 Checkout code
        uses: actions/checkout@v4
      
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: 📥 Install dependencies
        run: npm ci --legacy-peer-deps
      
      - name: 🔍 Check for outdated packages
        id: outdated
        run: |
          echo "🔍 Checking for outdated packages..."
          npm outdated --json > outdated-packages.json || true
          
          # Count outdated packages
          outdated_count=$(jq 'length' outdated-packages.json)
          echo "outdated_count=$outdated_count" >> $GITHUB_OUTPUT
          
          if [ "$outdated_count" -gt 0 ]; then
            echo "Found $outdated_count outdated packages"
            cat outdated-packages.json
          else
            echo "All packages are up to date!"
          fi
      
      - name: 🔍 Security audit
        run: |
          echo "🔍 Running security audit..."
          npm audit --audit-level=moderate --json > audit-results.json || true
          npm audit --audit-level=moderate
      
      - name: 📊 Dependency size analysis
        run: |
          echo "📊 Analyzing dependency sizes..."
          npx npm-check-updates --format json > ncu-results.json || true
          npx npm-check-updates
      
      - name: 📊 Upload dependency reports
        uses: actions/upload-artifact@v4
        with:
          name: dependency-reports
          path: |
            outdated-packages.json
            audit-results.json
            ncu-results.json
      
      - name: 📝 Dependency Summary
        run: |
          echo "## 📦 Dependency Analysis Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📊 Outdated Packages: ${{ steps.outdated.outputs.outdated_count }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ -f "outdated-packages.json" ]; then
            echo "### 🔍 Outdated Packages:" >> $GITHUB_STEP_SUMMARY
            jq -r 'to_entries[] | "- **\(.key)**: \(.value.current) → \(.value.latest)"' outdated-packages.json >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🛡️ Security Audit:" >> $GITHUB_STEP_SUMMARY
          if [ -f "audit-results.json" ]; then
            vulnerabilities=$(jq '.metadata.vulnerabilities.total // 0' audit-results.json)
            echo "- Total vulnerabilities: $vulnerabilities" >> $GITHUB_STEP_SUMMARY
          fi

  update-dependencies:
    name: 🔄 Update Dependencies
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.update_type != 'check'
    
    steps:
      - name: 🔍 Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: 📥 Install dependencies
        run: npm ci --legacy-peer-deps
      
      - name: 🔄 Update dependencies
        run: |
          case "${{ github.event.inputs.update_type }}" in
            "update-patch")
              echo "🔄 Updating patch versions..."
              npx npm-check-updates -u --target patch
              ;;
            "update-minor")
              echo "🔄 Updating minor versions..."
              npx npm-check-updates -u --target minor
              ;;
            "update-major")
              echo "🔄 Updating major versions..."
              npx npm-check-updates -u --target major
              ;;
            "audit-fix")
              echo "🔄 Running audit fix..."
              npm audit fix --force
              ;;
          esac
      
      - name: 📥 Install updated dependencies
        run: npm install --legacy-peer-deps
      
      - name: 🧪 Run tests after update
        run: |
          echo "🧪 Running tests after dependency update..."
          # Add your test commands here
          # npm run test
          echo "Tests not configured yet"
      
      - name: 🔍 Check for breaking changes
        run: |
          echo "🔍 Checking for potential breaking changes..."
          npm run build
          echo "Build completed successfully"
      
      - name: 📝 Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "📦 Update dependencies (${{ github.event.inputs.update_type }})"
          title: "📦 Dependency Updates - ${{ github.event.inputs.update_type }}"
          body: |
            ## 📦 Dependency Updates
            
            This PR contains dependency updates of type: **${{ github.event.inputs.update_type }}**
            
            ### Changes:
            - Updated dependencies to latest compatible versions
            - Ran security audit and fixes
            - Verified build and tests pass
            
            ### Review Checklist:
            - [ ] Review updated packages for breaking changes
            - [ ] Test the application thoroughly
            - [ ] Check for any new security vulnerabilities
            - [ ] Verify all functionality works as expected
            
            ### Generated by:
            - Workflow: Dependency Management
            - Trigger: Manual workflow dispatch
            - Type: ${{ github.event.inputs.update_type }}
          branch: dependency-updates-${{ github.event.inputs.update_type }}-${{ github.run_number }}
          delete-branch: true

  security-updates:
    name: 🛡️ Security Updates
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && github.event.inputs.update_type == 'audit-fix')
    
    steps:
      - name: 🔍 Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: 📥 Install dependencies
        run: npm ci --legacy-peer-deps
      
      - name: 🛡️ Run security audit
        run: |
          echo "🛡️ Running security audit..."
          npm audit --audit-level=moderate
      
      - name: 🔧 Apply security fixes
        run: |
          echo "🔧 Applying security fixes..."
          npm audit fix --force || true
      
      - name: 📥 Install fixed dependencies
        run: npm install --legacy-peer-deps
      
      - name: 🧪 Verify fixes
        run: |
          echo "🧪 Verifying security fixes..."
          npm audit --audit-level=high
          npm run build
      
      - name: 📝 Create Security Update PR
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "🛡️ Security updates and vulnerability fixes"
          title: "🛡️ Security Updates - $(date +%Y-%m-%d)"
          body: |
            ## 🛡️ Security Updates
            
            This PR contains security updates and vulnerability fixes.
            
            ### Changes:
            - Applied security patches for vulnerable dependencies
            - Updated packages to secure versions
            - Verified no high-severity vulnerabilities remain
            
            ### Security Checklist:
            - [ ] Review all updated packages
            - [ ] Test application for any breaking changes
            - [ ] Verify security vulnerabilities are resolved
            - [ ] Check for any new security issues
            
            ### Generated by:
            - Workflow: Dependency Management
            - Trigger: ${{ github.event_name }}
            - Date: $(date +%Y-%m-%d)
          branch: security-updates-$(date +%Y%m%d)
          delete-branch: true
